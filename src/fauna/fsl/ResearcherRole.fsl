role Researcher {

  membership Researcher

  privileges PatientRecords {
    call {
      predicate ((patient, type) => {
        let researcher = Query.identity()!
        let facility = researcher.facility

        Consent
          .byPatientAndFacility(patient, facility)
          .nonEmpty()
      })
    }
  }

  privileges Consent {
    read {
      predicate (
        (consent) => { consent.facility == Query.identity()!.facility }
      )
    }
  }

  privileges Practitioner {
    read
  }

  privileges Researcher {
    read
  }

  privileges Facility {
    read
  }
  
  privileges AccessRecord { 
    call 
  }
}