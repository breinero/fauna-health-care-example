collection Patient {
  name: {
    last: String,
    first: String
  }
  address: {
    street: String,
    city: String,
    state_provence: String?,
    postCode: Number | String | Null,
    country: String
  }

  index byLastAndFirstName {
     terms [ .name.last, .name.first ]
  }

  history_days 0  
}

collection Practitioner {
  name: {
    last: String,
    first: String
  }
  address: {
    street: String,
    city: String,
    state_provence: String?,
    postCode: Number | String | Null,
    country: String
  }
  facility: Ref<Facility>

  index byLastAndFirstName {
     terms [ .name.last, .name.first ]
  }
  
  history_days 0
}

collection Researcher {
  name: {
    last: String,
    first: String
  }
  address: {
    street: String,
    city: String,
    state_provence: String?,
    postCode: Number | String | Null,
    country: String
  }
  facility: Ref<Facility>

  index byLastAndFirstName {
     terms [ .name.last, .name.first ]
  }

  history_days 0

  migrations {
    add .facility
  }
}

collection Facility {
  name: String
  address: {
    street: String,
    city: String,
    state_provence: String?,
    postCode: Number | String | Null,
    country: String
  }

  history_days 0
}

collection Record { 
  patient: Ref<Patient>
  facility: Ref<Facility>
  name: String
  description: String

  history_days 0

  index byPatient { 
    terms [ .patient ] 
  }
}

collection Event {
  record: Ref<Record>
  accessor: Ref<Researcher> | Ref<Practitioner>
  type: "Export" | "Disclosure"
  purpose: "Treatment" | "Research"

  history_days 0

  migrations {
    drop .patient
  }
}

collection Consent {
  patient: Ref<Patient>
  facility: Ref<Facility>
  purpose: "Treatment" | "Research" = "Treatment"

  unique [ .patient, .facility, .purpose ]

  index byPatient {
    terms [.patient]
  }

  index byPatientAndFacility {
    terms [.patient, .facility]
  }

  history_days 0
 
  migrations { 
    add .record
    add .patient
    add .facility
    add .purpose
    drop .record
  }
}
