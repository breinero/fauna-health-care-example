role Practitioner {
  
  membership Practitioner 

  privileges Record {
    
    create 
    read 
    write 
    delete

    /*
    // A practitioner may create, update, or delete medical records
    // but only for a patient that has consented for them to do so
    create {
      // A provider can only create records for a patient who has consented to treatment 
      predicate (
        (record) => {
          let consent = Consent.byRecordAndFacility(
            record.patient,
            Query.identity()!.facility
          ).first()
          ( consent != null && consent!.record!.name == "Informed Concent")
        }
      )
    }

    read {
      predicate (
        (record) => {
          Consent.byRecordAndFacility(record, Query.identity()!.facility).first() != null
        }
      )
    }
    write {
      predicate (
        (oldData, newData, record) => {
          Consent.byRecordAndFacility(record, Query.identity()!.facility).first() != null 
        }
     
      )
    }

    delete {
      predicate (
        (record) => {
          Consent.byRecordAndFacility(record, Query.identity()!.facility).first() != null 
        }
      )
    }

    */
  }

  privileges Patient {
    read
  }

  privileges Practitioner {
    read
  }

  privileges Researcher {
    read
  }

  privileges Consent {
    read
  }

  privileges Event { 
    create { 
      predicate (
        event => { 
          event.accessor == Query.identity()
        }
      )
    }
  }
  
  privileges AccessRecord { 
    call 
  }
}